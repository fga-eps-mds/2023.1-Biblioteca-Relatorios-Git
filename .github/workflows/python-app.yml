name: Python application

on:
  push:
    branches: [ "teste_unitario/pipeline" ]

permissions:
  contents: read

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install matplotlib --upgrade
        pip install wordcloud --upgrade
        pip install requests --upgrade
        pip install python-dotenv --upgrade
        pip install setuptools --upgrade
        pip install flake8 pytest --upgrade
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -k "test_linux"

  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install matplotlib --upgrade
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -k "test_macos" 

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        py -m pip install --upgrade pip
        py -m pip install flake8 pytest
        pip install matplotlib --upgrade
        if (Test-Path "requirements.txt") { pip install -r requirements.txt }
        setx PATH "%PATH%;C:\hostedtoolcache\windows\Python\3.11.4\x64\Scripts"
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        & "C:\hostedtoolcache\windows\Python\3.11.4\x64\Scripts\flake8.exe" . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        & "C:\hostedtoolcache\windows\Python\3.11.4\x64\Scripts\flake8.exe" . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        & "C:\hostedtoolcache\windows\Python\3.11.4\x64\Scripts\pytest.exe" -k "test_windows"   
